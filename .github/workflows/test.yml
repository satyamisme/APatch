name: Build Manager

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
    paths:
      - '.github/workflows/build.yml'
      - 'app/**'
      - 'apd/**'
      - 'build.gradle.kts'
      - 'gradle/libs.versions.toml'
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/build.yml'
      - 'app/**'
      - 'apd/**'
      - 'build.gradle.kts'
      - 'gradle/libs.versions.toml'
  workflow_dispatch:

jobs:
  build-manager:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate version
        id: parse_version
        run: |
          COMMIT_NUM=$(git rev-list --count HEAD)
          VERSION=$(echo "$COMMIT_NUM + 200 + 10000" | bc)
          echo "Generated Version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v6
        with:
          version: 1.12.1

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: ''

      - name: Install toolchain
        run: |
          rustup default stable
          rustup update stable
          cargo install cargo-ndk
          rustup target install aarch64-linux-android

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: apd
          cache-targets: false

      - name: Build with Gradle
        run: |
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
          echo 'android.native.buildOutput=verbose' >> gradle.properties
          sed -i 's/org.gradle.configuration-cache=true//g' gradle.properties
          ./gradlew clean assembleRelease

      - name: Debug Gradle Build
        run: |
          echo "Gradle build output directory:"
          ls -R app/build/outputs/
          echo "APK files in release directory:"
          ls -l app/build/outputs/apk/release/ || echo "No APKs found"

      - name: Extract Version Code
        id: extract_version_code
        run: |
          VERSION_CODE=$(grep -E 'versionCode\s*=\s*[0-9]+' app/build.gradle.kts | head -n 1 | awk '{print $3}' || echo "unknown")
          echo "Version Code: $VERSION_CODE"
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_OUTPUT

      - name: Rename APK with Date
        id: rename_apk
        run: |
          DATE=$(date +%Y%m%d)
          VERSION=${{ steps.parse_version.outputs.VERSION }}
          VERSION_CODE=${{ steps.extract_version_code.outputs.VERSION_CODE }}
          COMMIT_SHA=$(git rev-parse --short HEAD)
          ORIGINAL_APK=$(ls app/build/outputs/apk/release/*.apk | head -n 1 || echo "")
          if [ -z "$ORIGINAL_APK" ]; then
            echo "Error: No APK found in app/build/outputs/apk/release/"
            exit 1
          fi
          NEW_APK_NAME="APatch_${VERSION}-${VERSION_CODE}_${COMMIT_SHA}_${DATE}-release.apk"
          mv "$ORIGINAL_APK" "app/build/outputs/apk/release/$NEW_APK_NAME"
          echo "Renamed APK to: $NEW_APK_NAME"
          echo "APK_NAME=$NEW_APK_NAME" >> $GITHUB_OUTPUT

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: APatch
          path: app/build/outputs/apk/release/${{ steps.rename_apk.outputs.APK_NAME }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ github.token }}
          tag: "build-${{ github.run_id }}-${{ steps.rename_apk.outputs.APK_NAME }}"
          name: Release ${{ steps.parse_version.outputs.VERSION }} (${{ steps.rename_apk.outputs.APK_NAME }})
          artifacts: app/build/outputs/apk/release/${{ steps.rename_apk.outputs.APK_NAME }}
          generateReleaseNotes: true
          makeLatest: true
          replacesArtifacts: true
